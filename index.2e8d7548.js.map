{"mappings":"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","sources":["src/types/Actor.ts","src/FPSviewer.ts","src/Mariana.ts","src/actorEvil.ts","src/script.ts"],"sourcesContent":["\nimport { Point } from \"./Point\";\n\nexport interface IActor {\n    origin: Point;\n    position: Point;\n    speed?: number;\n    update: (delta: number) => void;\n    keyboard_event: (key: string) => void;\n    keyboard_event_down?: (key: string) => void;\n    keyboard_event_up?: (key: string) => void;\n    draw: (delta: number, ctx: CanvasRenderingContext2D) => void;\n}\n\nexport class Actor implements IActor {\n    origin!: Point;\n    position!: Point;\n    contructor(origin: Point) {\n        this.origin = origin;\n    }\n    update(delta: number) { }\n    draw(delta: number, ctx: CanvasRenderingContext2D) { }\n    keyboard_event(key: string) { }\n}\n\nexport type Size = { w: number, h: number }","import { Point } from \"./types/Point\";\nimport { Actor } from \"./types/Actor\";\n\n\nexport class FPSviewer extends Actor {\n  position: Point;\n  color: string;\n  constructor(position: Point, color: string) {\n    super();\n    this.position = position;\n    this.color = color;\n\n  }\n\n  update() { }\n  keyboard_event() { }\n  draw(delta: number, ctx: CanvasRenderingContext2D) {\n    const fps = (1 / delta).toFixed(2);\n    ctx.font = \"18px Arial\";\n    ctx.fillStyle = this.color;\n    ctx.fillText(`FPS:${fps}`, this.position.x, this.position.y);\n  }\n}","import { IActor, Actor, Size } from \"./types/Actor\";\nimport { Point } from \"./types/Point\"\n\nexport class Mariana extends Actor implements IActor {\n    origin: Point;\n    color: string;\n    speed: number;\n    saltando: boolean;\n    altura: number;\n    constructor({ initialPos, color = \"purple\", speed = 10 }: { initialPos: Point; color?: string; speed?: number; }) {\n        super();\n        this.origin = { x: initialPos.x, y: initialPos.y };\n        this.color = color;\n        this.speed = speed;\n        this.saltando = false;//estado espacio falso no pulsado\n        this.altura = 420;\n    }\n    //add funcion\n    /*initialize() {\n        let marianaSister_png = new image();\n        marianaSister_png.src = marina_spritesheet;\n        marianaSister_png.onload = () => { console.log(\"imagen cargada\") };\n    }*/\n    update(delta: number) {\n        /*let newPosX = this.origin.x - this.speed.x;\n        let newPosY = 0;\n        if (newPosX < 500 && newPosX >= 0) {\n            this.origin.x = newPosX;\n\n        }*/\n\n        if (this.saltando) {\n            this.origin.y -= 1\n        }\n\n        if (this.origin.y == this.altura && this.saltando == true) {\n            for (let i = this.altura; i <= 490; i++) {\n                this.origin.y = i;\n            }\n            // this.origin.y += 1\n            this.origin.y = 490\n            this.saltando = false\n        }\n\n\n    }\n\n    keyboard_event(key: string) {\n        switch (key) {\n            case \"ArrowRight\":\n                console.log(\"right\");\n                this.origin.x = (this.origin.x + this.speed) % 500;\n\n\n                break;\n            case \"ArrowLeft\":\n                //(this.origin.x > 0 && this.origin.x <= 500) = this.origin.x - this.speed\n                //tengo que conseguir que solo se mueva en el canvas de 0-500 eje x\n                this.origin.x = (this.origin.x - this.speed);\n                console.log(\"left\");\n                break;\n            case \"ArrowUp\":\n                // this.origin.y = (this.origin.y - this.speed) % 500;\n                console.log(\"Up\");\n                break;\n            case \"ArrowDown\":\n                console.log(\"Down\");\n                //this.origin.y = (this.origin.y + this.speed) % 500;    \n                break;\n            case \" \":\n                console.log(\"salta\");\n                this.origin.y = (this.origin.y - this.speed);\n                this.saltando = true;\n                break;\n        }\n    }\n    draw(delta: number, ctx: CanvasRenderingContext2D) {\n        let origin = this.origin;//add salto\n        ctx.fillStyle = 'purple';\n        ctx.fillRect(origin.x, origin.y, 10, 10);\n        // Controlamos la dirección del Mariana\n        let direction = 0;\n        /* if (this.speed.x != 0 && this.speed.x < 0) {\n             direction = 180\n         }*/\n    }\n}\n","import { IActor, Actor, Size } from \"./types/Actor\";\nimport { Point } from \"./types/Point\";\nimport { Mariana } from \"./Mariana\";\nexport class actorEvil extends Actor implements IActor {\n    origin: Point;\n    color: string;\n    speed: number;\n    saltando: boolean;\n    altura: number;\n    actor: any;// definir que es\n    constructor(initialPos: Point, color: string, actor: any/*cambiar el any*/) {\n        super();\n        this.origin = { x: initialPos.x, y: initialPos.y };\n        this.color = color;\n        this.speed = 1;\n        this.actor = actor;//add  this.origin = { x: initialPos.x, y: initialPos.y };de mi actor mariana\n        this.saltando = false;\n        this.altura = 450;\n    }\n    update() {\n        this.origin.x -= this.speed\n        this.origin.y = 490\n        let actorPos = this.actor.origin;\n\n\n        let myPos = this.origin;\n        let distance = Math.sqrt(Math.pow(myPos.x - this.actor.origin.x, 2) + Math.pow(myPos.y - this.actor.origin.y, 2));\n        //console.log(distance);\n        if (distance <= 5 && this.actor.origin.y >= 490) { alert(\" Game Over \") }\n    }\n    keyboard_event() { }\n    draw(delta: number, ctx: CanvasRenderingContext2D) {\n        let origin = this.origin;//add salto\n        ctx.fillStyle = this.color;\n        ctx.fillRect(origin.x, origin.y, 10, 10);\n        // Controlamos la dirección del Mariana\n        //let direction = 0;\n        //if (this.speed.x != 0 && this.speed.x < 0) {direction = 180}\n    }\n}","import { Actor, IActor } from \"./types/Actor\";\nimport { Point } from \"./types/Point\";\nimport { FPSviewer } from \"./FPSviewer\";\nimport { Mariana } from \"./Mariana\";\nimport { actorEvil } from \"./actorEvil\";\nwindow.onload = () => {\n\n\n    var canvas = document.getElementById(\"canvas\") as HTMLCanvasElement;\n    var ctx = canvas.getContext('2d') as CanvasRenderingContext2D;\n\n    let fps = new FPSviewer({ x: 5, y: 15 }, \"black\");\n    let mariana = new Mariana({ initialPos: { x: 1, y: 490 }, color: \"purple\", speed: 10 });//Mariana\n\n    let actors: Array<IActor> = [\n        fps,\n        mariana,//Mariana \n        new actorEvil({ x: 500, y: 490 }, \"red\", mariana),// malo\n        new actorEvil({ x: 500, y: 490 }, \"blue\", mariana),// malo\n        //new actorEvil({ x: 500, y: 490 }, \"grey\", speed = 0.5, mariana),// malo\n    ];\n    //actors.forEach((a) => a.initialize && a.initialize());//para los sprites\n    //tengo que crear un array de actores evil donde les meto el actor mariana \n    let lastFrame = 0;\n    const render = (time: number) => {\n\n        let delta = (time - lastFrame) / 1000;\n        lastFrame = time;\n        actors.forEach(e => e.update(delta));\n        ctx.clearRect(0, 0, 500, 500);\n        actors.forEach((e) => {\n            e.draw(delta, ctx);\n        });\n\n        window.requestAnimationFrame(render);\n    }\n\n    window.requestAnimationFrame(render);\n    document.body.addEventListener(\"keydown\", (e) => {\n        actors.forEach((actor) => { actor.keyboard_event(e.key) });\n    });\n\n}\n"],"names":["$c2f1b17ab47188d2$export$f73d3eb6fd876d80","contructor","origin","this","update","delta","draw","delta1","ctx","keyboard_event","key","$502dbf953f8de01c$export$c2add218418bab48","position","color","super","fps","toFixed","font","fillStyle","fillText","x","y","$f5470880e11d0c0d$export$dfffcd368a0c33a2","initialPos","speed","saltando","altura","i","console","log","fillRect","$5ef15e0738b87499$export$e550015ad0cf97e2","actor","myPos","Math","sqrt","pow","alert","window","onload","document","getElementById","getContext","mariana","actors","lastFrame","render","time","forEach","e","clearRect","requestAnimationFrame","body","addEventListener"],"version":3,"file":"index.2e8d7548.js.map"}